name: Build and push image
run-name: Build and deploy image to AWS ECR.
on:
  push: 
    branches:
      - master
      - feature/Docker
permissions:
 id-token: write
 contents: read
env:
  AWS-ACCOUNT-ID: '056331603841'
  AWS-REGION: 'ap-southeast-2'
  IMAGE-NAME: 'mycoolwebapi'
  IMAGE-TAG: ${{ github.sha }}
  ECR-REGISTRY: 056331603841.dkr.ecr.us-east-1.amazonaws.com
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::${{ env.AWS-ACCOUNT-ID }}:role/github_actions_role
          aws-region: ${{ env.AWS-REGION }}
          role-session-name: samplerolesession

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registry: ${{ env.ECR-REGISTRY }}
          region: ${{ env.AWS-REGION }}

      - name: Build and tag Docker image
        run: |
          cd ./MyCoolWebAPI
          docker build -t ${{ env.ECR-REGISTRY }}/${{ env.IMAGE-NAME }}:${{ github.sha }} .
          docker tag ${{ env.ECR-REGISTRY }}/${{ env.IMAGE-NAME }}:${{ github.sha }} ${{ env.ECR-REGISTRY }}/${{ env.IMAGE-NAME }}:latest

      - name: Push Docker image to Amazon ECR
        run: |
          docker push ${{ env.ECR-REGISTRY }}/${{ env.IMAGE-NAME }}:${{ github.sha }}
          docker push ${{ env.ECR-REGISTRY }}/${{ env.IMAGE-NAME }}:latest
      # - name: Build and tag Docker image
      #   id: build-image
      #   run: |
      #     docker build -t ${{ env.IMAGE-NAME }}:$GITHUB-SHA .
      #     docker tag ${{ env.IMAGE-NAME }}:$GITHUB-SHA ${{ env.ECR-REGISTRY }}/${{ env.IMAGE-NAME }}:$GITHUB-SHA

      # - name: Push Docker image to Amazon ECR
      #   id: push-image

      #   run: |
      #     docker push ${{ env.ECR-REGISTRY }}/${{ env.IMAGE-NAME }}:${{ env.IMAGE-TAG }}
